"use strict";
window.onload = function () {
    var textareaUpdateDelay = window.screen.width > 768 ? 600 : 1200;
    function showAlert(message) {
        var alerts = document.getElementsByClassName('alert');
        if (alerts.length !== 0)
            for (var _i = 0, alerts_1 = alerts; _i < alerts_1.length; _i++) {
                var item = alerts_1[_i];
                item.remove();
            }
        var outer_div = document.createElement('div'), inner_div = document.createElement('div');
        outer_div.classList.add('alert');
        inner_div.classList.add('alert_content');
        inner_div.innerText = message;
        outer_div.appendChild(inner_div);
        document.body.appendChild(outer_div);
    }
    function error(message) {
        showAlert("Error: " + message);
        throw new Error(message);
    }
    function createShader(gl, type, source) {
        var shader = gl.createShader(type);
        if (shader === null) {
            error("shader compilation failed");
        }
        gl.shaderSource(shader, source);
        gl.compileShader(shader);
        var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
        if (success) {
            return shader;
        }
        console.log(gl.getShaderInfoLog(shader));
        gl.deleteShader(shader);
    }
    function createProgram(gl, vertexShader, fragmentShader) {
        var program = gl.createProgram();
        if (program === null) {
            error("program creation failed");
        }
        gl.attachShader(program, vertexShader);
        gl.attachShader(program, fragmentShader);
        gl.linkProgram(program);
        var success = gl.getProgramParameter(program, gl.LINK_STATUS);
        if (success) {
            return program;
        }
        console.log(gl.getProgramInfoLog(program));
        gl.deleteProgram(program);
    }
    var delayTimer;
    function reloadShaders(gl) {
        clearTimeout(delayTimer);
        delayTimer = setTimeout(function () {
            vertexShader = createShader(gl, gl.VERTEX_SHADER, vertex_shader_textarea.value);
            if (vertexShader === undefined) {
                error("vertex shader compilation failed");
            }
            fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragment_shader_textarea.value);
            if (fragmentShader === undefined) {
                error("fragment shader compilation failed");
            }
            if (program !== undefined) {
                gl.deleteProgram(program);
            }
            program = createProgram(gl, vertexShader, fragmentShader);
            if (program === undefined) {
                error("program creation failed");
            }
            timeLocation = gl.getUniformLocation(program, "u_time");
            resolutionLocation = gl.getUniformLocation(program, "u_res");
            positionAttributeLocation = gl.getAttribLocation(program, "a_position");
            gl.useProgram(program);
        }, textareaUpdateDelay);
    }
    var canvas = document.getElementById("c");
    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;
    var gl = canvas.getContext("webgl2");
    if (gl === null) {
        error("webgl2 is not supported");
    }
    var vertex_shader_textarea = document.getElementById("v");
    if (vertex_shader_textarea === null) {
        error("vertex shader textarea was not found");
    }
    vertex_shader_textarea.value = "#version 300 es\nin vec4 a_position;\nin vec2 a_texCoord;\n\nuniform float u_time;\n\nout vec2 v_texCoord;\n\nvoid main() {\n    gl_Position = vec4(sin(a_position.x - 0.5 * u_time), a_position.y - 0.5, a_position.z, 1.0);\n    v_texCoord = a_texCoord;\n}\n";
    var fragment_shader_textarea = document.getElementById("f");
    if (fragment_shader_textarea === null) {
        error("fragment shader textarea was not found");
    }
    fragment_shader_textarea.value = "#version 300 es\nprecision highp float;\n\nuniform sampler2D u_texture;\nuniform float u_time;\nuniform vec2 u_res;\n\nin vec2 v_texCoord;\nout vec4 outColor;\n\nvoid main() {\n    outColor = texture(u_texture, v_texCoord);\n}\n";
    var vertexShaderSource = vertex_shader_textarea.value;
    var fragmentShaderSource = fragment_shader_textarea.value;
    var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);
    var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);
    if (vertexShader === undefined) {
        error("vertex shader compilation failed");
    }
    if (fragmentShader === undefined) {
        error("fragment shader compilation failed");
    }
    var program = createProgram(gl, vertexShader, fragmentShader);
    if (program === undefined) {
        error("program creation failed");
    }
    var timeLocation = gl.getUniformLocation(program, "u_time");
    var resolutionLocation = gl.getUniformLocation(program, "u_res");
    var textureLocation = gl.getUniformLocation(program, "u_texture");
    var positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    var texCoordAttributeLocation = gl.getAttribLocation(program, "a_texCoord");
    var positionBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
    var square = new Float32Array([
        -1.0, 1.0,
        -1.0, -1.0,
        1.0, -1.0,
        1.0, 1.0,
        1.0, -1.0,
        -1.0, 1.0
    ]);
    gl.bufferData(gl.ARRAY_BUFFER, square, gl.STATIC_DRAW);
    var vao = gl.createVertexArray();
    gl.bindVertexArray(vao);
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);
    var texCoordBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
    var square_texture = new Float32Array([
        -1.0, 1.0,
        -1.0, -1.0,
        1.0, -1.0,
        1.0, 1.0,
        1.0, -1.0,
        -1.0, 1.0
    ]);
    gl.bufferData(gl.ARRAY_BUFFER, square_texture, gl.STATIC_DRAW);
    gl.enableVertexAttribArray(texCoordAttributeLocation);
    gl.vertexAttribPointer(texCoordAttributeLocation, 2, gl.FLOAT, false, 0, 0);
    var texture = gl.createTexture();
    if (texture === null) {
        error("could not create texture");
    }
    var image = new Image();
    image.onload = function () {
        gl.activeTexture(gl.TEXTURE0 + 0);
        gl.bindTexture(gl.TEXTURE_2D, texture);
        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);
    };
    image.src = 'data:image/png;base64,' + '';
    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);
    gl.useProgram(program);
    gl.uniform1i(textureLocation, 0);
    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
    function renderLoop(timeStamp) {
        gl.uniform1f(timeLocation, timeStamp * 0.001);
        gl.uniform2f(resolutionLocation, gl.canvas.width, gl.canvas.height);
        gl.clearColor(0, 0, 0, 0);
        gl.clear(gl.COLOR_BUFFER_BIT);
        gl.drawArrays(gl.TRIANGLES, 0, 6);
        window.requestAnimationFrame(renderLoop);
    }
    vertex_shader_textarea.addEventListener('input', function () { reloadShaders(gl); });
    fragment_shader_textarea.addEventListener('input', function () { reloadShaders(gl); });
    window.requestAnimationFrame(renderLoop);
};
